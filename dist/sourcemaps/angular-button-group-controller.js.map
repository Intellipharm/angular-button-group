{"version":3,"sources":["angular-button-group-controller.js"],"names":[],"mappings":"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","file":"angular-button-group-controller.js","sourcesContent":["import AngularButtonGroupUtils from \"./angular-button-group-utils\";\n\n/**\n * Class AngularButtonGroupController\n */\nexport default class AngularButtonGroupController {\n\n    constructor($s) {\n\n        this.$s = $s;\n\n        this.show_confirm_group = false;\n        this.api = $s.api || {};\n\n        this.api.reset = this.reset.bind(this);\n\n        this.buttons = {};\n\n        // defaults\n\n        this.default_config = {\n            busy_confirming: false, // control\n            button_class: [],\n            button_class_index: 0,\n            callback: null,\n            confirm: false,\n            confirm_group_class: \"\",\n            confirm_label_class: \"\",\n            confirm_message: null,\n            confirm_no_label: \"NO\",\n            confirm_no_button_class: \"\",\n            confirm_yes_label: \"YES\",\n            confirm_yes_button_class: \"\",\n            disable_others: false,\n            disabled: false, // control\n            label: [],\n            label_index: 0,\n            show_confirm_group: false, // control\n            visible: true\n        };\n\n        //--------------------------------------------------------\n        // watchers\n        //--------------------------------------------------------\n\n        $s.$watch('AngularButtonGroup.config', (val) => {\n\n            if (_.isUndefined(val)) {\n                return;\n            }\n\n            // reset\n            if (!_.has(val, 'reset') && val.reset) {\n                val.reset = false;\n            }\n\n            // create buttons config\n            this.buttons_config = AngularButtonGroupUtils.createButtonsConfig(val, this.default_config);\n\n        }, true);\n    }\n\n    ////////////////////////////////////////////////\n    //\n    // handlers\n    //\n    ////////////////////////////////////////////////\n\n    /**\n     * onClick\n     *\n     * @param {string} button_key\n     */\n    onClick(button_key) {\n\n        let _config = Object.assign({}, this.buttons_config[ button_key ]);\n\n        // enable\n        _config.disabled = false;\n\n        // if multiple labels then cycle\n        if (_config.label.length > 1) {\n            if (++_config.label_index === _config.label.length) {\n                _config.label_index = 0;\n            }\n        }\n\n        // if multiple classes then cycle\n        if (_config.button_class.length > 1) {\n            if (++_config.button_class_index === _config.button_class.length) {\n                _config.button_class_index = 0;\n            }\n        }\n\n        // stop others that are confirming\n        let _exclude = [ button_key ];\n        this.buttons_config = AngularButtonGroupUtils.updateButtonsConfigProperty(this.buttons_config, \"show_confirm_group\", false, _exclude);\n\n        // disable others?\n        if (_config.disable_others) {\n            _exclude = [ button_key ];\n            this.buttons_config = AngularButtonGroupUtils.updateButtonsConfigProperty(this.buttons_config, \"disabled\", true, _exclude);\n        }\n\n        // requires confirmation?\n        if (_config.confirm) {\n            _config.busy_confirming = true;\n            _config.show_confirm_group = true;\n        }\n\n        // update this button's config\n        this.buttons_config[ button_key ] = _config;\n\n        // external handler\n        if (!_.isNull(_config.callback)) {\n            _config.callback(_config, _config.busy_confirming);\n        }\n    }\n\n    /**\n     * onYesClick\n     *\n     * @param {string} button_key\n     */\n    onYesClick(button_key) {\n\n        let _config = Object.assign({}, this.buttons_config[ button_key ]);\n\n        _config.show_confirm_group = false;\n        _config.busy_confirming = false;\n\n        // disable others?\n        if (_config.disable_others) {\n            let _exclude = [ button_key ];\n            this.buttons_config = AngularButtonGroupUtils.updateButtonsConfigProperty(this.buttons_config, \"disabled\", false, _exclude);\n        }\n\n        // update this button's config\n        this.buttons_config[ button_key ] = _config;\n\n        // external handler\n        if (!_.isNull(_config.callback)) {\n            _config.callback(_config, false, true);\n        }\n    }\n\n    /**\n     * onNoClick\n     *\n     * @param {string} button_key\n     */\n    onNoClick(button_key) {\n\n        let _config = Object.assign({}, this.buttons_config[ button_key ]);\n\n        // disable others?\n        if (_config.disable_others) {\n            let _exclude = [ button_key ];\n            this.buttons_config = AngularButtonGroupUtils.updateButtonsConfigProperty(this.buttons_config, \"disabled\", false, _exclude);\n        }\n\n        _config.show_confirm_group = false;\n        _config.busy_confirming = false;\n\n        // update this button's config\n        this.buttons_config[ button_key ] = _config;\n\n        // external handler\n        if (!_.isNull(_config.callback)) {\n            _config.callback(_config, false, true);\n        }\n    }\n\n    ////////////////////////////////////////////////\n    //\n    // utils\n    //\n    ////////////////////////////////////////////////\n\n    /**\n     * reset\n     */\n    reset() {\n        // recreate initial buttons config\n        this.buttons_config = AngularButtonGroupUtils.createButtonsConfig(this.config, this.default_config);\n    }\n}\n\nAngularButtonGroupController.$inject = ['$scope'];\n"],"sourceRoot":"src/app/*.js"}